name: GitHub Release
description: Generates a new release on GitHub for the given version
inputs:
  token:
    description: GitHub token with access to all necessary repositories
    required: true
  version:
    description: The version for which to generate a release
    required: true
  community_api_username:
    required: true
  community_api_key:
    required: true
  community_base_url:
    required: false
    default: "https://community.grafana.com"
  community_category_id:
    required: false
    default: "9"
  metrics_api_key:
    description: API key/password for a Graphite HTTP endpoint
    required: false
  metrics_api_username:
    description: Username for a Graphite HTTP endpoint
    required: false
  metrics_api_endpoint:
    description: Full URL of a Graphite HTTP endpoint
    required: false
  binary_release_tag:
    required: false
    default: "dev"
runs:
  using: composite
  steps:
  - run: |
      set -e
      # Download the action from the store
      curl --fail -L -o /tmp/community-release https://github.com/grafana/grafana-github-actions-go/releases/download/${{inputs.binary_release_tag}}/community-release
      chmod +x /tmp/community-release
      # Execute action
      /tmp/community-release
    shell: bash
    env:
      GITHUB_TOKEN: ${{inputs.token}}
      INPUT_VERSION: ${{inputs.version}}
      INPUT_METRICS_API_USERNAME: ${{inputs.metrics_api_username}}
      INPUT_METRICS_API_KEY: ${{inputs.metrics_api_key}}
      INPUT_METRICS_API_ENDPOINT: ${{inputs.metrics_api_endpoint}}
      INPUT_COMMUNITY_API_USERNAME: ${{inputs.community_api_username}}
      INPUT_COMMUNITY_API_KEY: ${{inputs.community_api_key}}
      INPUT_COMMUNITY_BASE_URL: ${{inputs.community_base_url}}
      INPUT_COMMUNITY_CATEGORY_ID: ${{inputs.community_category_id}}
